from typing import Optional
import nextcord
from nextcord import embeds
from nextcord.colour import Color
from nextcord.ext import commands
import sys
import random


#parent directory import
sys.path.append('DatabaseRelated')
sys.path.append('cogs')
import mongodb
from player import Player
import operator

class MyHelpCommand(commands.MinimalHelpCommand):
    def get_command_signature(self, command):
        return '{0.clean_prefix}{1.qualified_name} {1.signature}'.format(self, command)

    async def _help_embed(self, title: str, description: Optional[str] = None, mapping:Optional[dict] = None):
        embed= embeds.Embed(title= title)
        if description:
            embed.description = description
        if mapping:
            #add short description of cogs
            for cog, command_set in mapping.items():
                filtered = await self.filter_commands(command_set, sort =True)
                if not filtered:
                    continue
                name = cog.qualified_name if cog else "no category"
                cmd_list = "\u2002".join(
                    f"`{self.context.clean_prefix}{cmd.name}`" for cmd in filtered
                )
                value = (
                    f"{cog.description}\n{cmd_list}"
                    if cog and cog.description
                    else cmd_list
                )
                embed.add_field(name=name, value=value)




        return embed 
    
    async def send_bot_help(self, mapping:dict):
        embed =await self._help_embed(
            title = "Bot Commands",
            description=self.context.bot.description,
            mapping = mapping
        )      
       
        await self.get_destination().send(embed= embed)
        

    async def send_command_help(self, command: commands.Command):
        pass

    async def send_cog_help(self, cog:commands.Cog):
        pass

    send_group_help = send_command_help

    

class Help_Commands(commands.Cog):
    """Shows Help info"""
    def __init__(self, bot):
        self._original_help_command = bot.help_command
        bot.help_command = MyHelpCommand()
        bot.help_command.cog = self
        
    def cog_unload(self):
        self.bot.help_command = self._original_help_command

# class Help_Commands(commands.Cog):
#     """stat commands"""

#     def __init__(self,client: commands.Bot):
#         self.client = client    
    
    
#     @commands.group(invoke_without_command= True)
#     async def help(ctx):
#         embed = nextcord.Embed(
#             title = "help",
#             description = "use help followed by the command =help <command>, example =help stats"
#         )
#         embed.add_field(name = "Commands", value = "fight, main, secondary, random")
#         embed.add_field(name = "Stat Commands", value = "stats, rankings, wins")

#         await ctx.send(embded = embed)

#     @help.command()
#     async def fight(ctx):
#         embed = nextcord.Embed(
#             title = "fight",
#             description = "start a fight with another player",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "use fight command by fight @{mention user}")

#     @help.command()
#     async def main(ctx):
#         embed = nextcord.Embed(
#             title = "main",
#             description = "adds a main to your profile(beta still)",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "use the main command followed by the character name, and enter nothing to clear your mains")

#     @help.command()
#     async def secondary(ctx):
#         embed = nextcord.Embed(
#             title = "secondary",
#             description = "adds a secondary to your profile(beta still)",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "use the main command followed by the character name, and enter nothing to clear your secondaries")

#     @help.command()
#     async def random(ctx):
#         embed = nextcord.Embed(
#             title = "random",
#             description = "Random characters and skin picture",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "just use the command followed by nothing to get your character, just try to get your own {}.".format("<:wink:>"))

#     @help.command()
#     async def stats(ctx):
#         embed = nextcord.Embed(
#             title = "stats",
#             description = "returns the stats of the desire user",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "command followed by @(mention user} or enter nopthing to get your own")

#     @help.command()
#     async def rankings(ctx):
#         embed = nextcord.Embed(
#             title = "rankings",
#             description = "returns the ranking of the desired user",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "command followed by @(mention user} or enter nopthing to get your own")

#     @help.command()
#     async def wins(ctx):
#         embed = nextcord.Embed(
#             title = "wins",
#             description = "number of wins and losses of your opponents",
#             color = ctx.author.color 
#         )

#         embed.add_field(name = "how to use", value = "command followed by @(mention user} or enter nopthing to get your own")       
    

def setup(client):
    client.add_cog(Help_Commands(client))